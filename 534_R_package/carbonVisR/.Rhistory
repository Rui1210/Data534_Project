library(carbonVisR)
usethis::use_testthat()
usethis::use_test()
usethis::use_test()
library(carbonVisR)
sethis::use_test()
usethis::use_test()
use_test()
use_test()
usethis::use_testthat()
usethis::use_test()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage_active_file()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
usethis::use_testthat()
usethis::use_test()
usethis::use_testthat()
usethis::use_test()
usethis::use_test()
usethis::use_test("test_generation")
usethis::use_test()
devtools:::test_coverage()
devtools:::test_coverage()
usethis::use_test()
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/tests/testthat/test-generation.R", echo=TRUE)
devtools:::test_coverage()
usethis::use_test()
devtools:::test_coverage()
devtools:::test_coverage()
if (!requireNamespace("testthat", quietly = TRUE) || packageVersion("testthat") < "3.0.0") {
install.packages("testthat")
}
library(testthat)
packageVersion("testthat")
install.packages("testthat")
install.packages("testthat")
packageVersion("testthat")
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/tests/testthat/test-carbon_generation.R", echo=TRUE)
stack_chart <- carbon_generation_visual("2018-6-12", "2018-6-21", "stack")
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
library(carbonVisR)
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
library("carbonVisR")
carbon_generation_visual("2023-6-11","2023-7-05","line")
devtools:::test_coverage()
devtools:::test_coverage()
devtools::install()
devtools::install()
devtools::document()
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/R/carbon_generation.R", echo=TRUE)
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/R/carbon_generation.R", echo=TRUE)
install.packages("vctrs")
install.packages("vctrs")
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/R/carbon_generation.R", echo=TRUE)
remove.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
@export
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/R/carbon_generation.R", echo=TRUE)
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/R/carbon_generation.R", echo=TRUE)
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/R/carbon_generation.R", echo=TRUE)
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/R/carbon_generation.R", echo=TRUE)
devtools::document()
devtools::document()
devtools::document()
rm(list = c("carbon_generation", "carbon_generation_visual", "validate_date_range"))
devtools::document()
devtools::document()
devtools::document()
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/R/carbon_generation.R", echo=TRUE)
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/R/carbon_generation.R", echo=TRUE)
carbon_generation_visual("2023-6-23","2023-6-29","line")
devtools::document()
devtools::document()
rm(list = c("carbon_generation", "carbon_generation_visual", "validate_date_range"))
devtools::document()
unlink("man", recursive = TRUE)
devtools::document()
devtools::clean_dll()
devtools::install()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
library(carbonVisR)
carbon_generation_visual("2023-6-21","2023-6-27","line")
library(carbonVisR)
devtools:::test_coverage()
unlink(".RData", force = TRUE)
unlink(".Rhistory", force = TRUE)
unlink(".Rproj.user", recursive = TRUE, force = TRUE)
devtools::install()
remove.packages("rlang")
devtools::install("rlang")
install("rlang")
devtools::install("rlang")
install.packages("rlang")
install.packages("rlang")
devtools:::test_coverage()
library(carbonVisR)
devtools:::test_coverage()
remove.packages("carbonVisR")
devtools:::test_coverage()
devtools::install()
devtools::install
devtools::install()
library(carbonVisR)
source("~/Downloads/DATA 534/DATA 534 group project/534_R_package/carbonVisR/tests/testthat/test-carbon_generation.R", echo=TRUE)
devtools:::test_coverage()
install.packages("carbonVisR")
library(carbonVisR)
carbon_generation_visual("2023-6-21","2023-6-30","line")
devtools::load_all(".")
library(roxygen2, lib.loc = "/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library")
install.packages(c("foghorn", "kableExtra", "viridis"))
install.packages(c("brew", "brio", "bslib", "cli", "cluster", "commonmark", "curl", "data.table", "DBI", "deldir", "desc", "digest", "dplyr", "evaluate", "expm", "fansi", "FNN", "foreign", "fracdiff", "future", "future.apply", "gbm", "gert", "ggplot2", "glue", "hardhat", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "interp", "knitr", "later", "lifecycle", "listenv", "markdown", "MASS", "Matrix", "mgcv", "mongolite", "nlme", "odbc", "openssl", "pbdZMQ", "pkgbuild", "pkgload", "processx", "ps", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "recipes", "rlang", "RMariaDB", "RMySQL", "roxygen2", "rpart", "rprojroot", "RSQLite", "sass", "scales", "shiny", "stringi", "stringr", "systemfonts", "textshaping", "tidyr", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml", "zip"), lib="/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library")
install.packages(c("brew", "brio", "bslib", "cli", "cluster", "commonmark", "curl", "data.table", "DBI", "deldir", "desc", "digest", "dplyr", "evaluate", "expm", "fansi", "FNN", "foreign", "fracdiff", "future", "future.apply", "gbm", "gert", "ggplot2", "glue", "hardhat", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "interp", "knitr", "later", "lifecycle", "listenv", "markdown", "MASS", "Matrix", "mgcv", "mongolite", "nlme", "odbc", "openssl", "pbdZMQ", "pkgbuild", "pkgload", "processx", "ps", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "recipes", "rlang", "RMariaDB", "RMySQL", "roxygen2", "rpart", "rprojroot", "RSQLite", "sass", "scales", "shiny", "stringi", "stringr", "systemfonts", "textshaping", "tidyr", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml", "zip"), lib = "/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library")
install.packages(c("brew", "brio", "bslib", "cli", "cluster", "commonmark", "curl", "data.table", "DBI", "deldir", "desc", "digest", "dplyr", "evaluate", "expm", "fansi", "FNN", "foreign", "fracdiff", "future", "future.apply", "gbm", "gert", "ggplot2", "glue", "hardhat", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "interp", "knitr", "later", "lifecycle", "listenv", "markdown", "MASS", "Matrix", "mgcv", "mongolite", "nlme", "odbc", "openssl", "pbdZMQ", "pkgbuild", "pkgload", "processx", "ps", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "recipes", "rlang", "RMariaDB", "RMySQL", "roxygen2", "rpart", "rprojroot", "RSQLite", "sass", "scales", "shiny", "stringi", "stringr", "systemfonts", "textshaping", "tidyr", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml", "zip"), lib = "/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library")
install.packages(c("brew", "brio", "bslib", "cli", "cluster", "commonmark", "curl", "data.table", "DBI", "deldir", "desc", "digest", "dplyr", "evaluate", "expm", "fansi", "FNN", "foreign", "fracdiff", "future", "future.apply", "gbm", "gert", "ggplot2", "glue", "hardhat", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "interp", "knitr", "later", "lifecycle", "listenv", "markdown", "MASS", "Matrix", "mgcv", "mongolite", "nlme", "odbc", "openssl", "pbdZMQ", "pkgbuild", "pkgload", "processx", "ps", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "recipes", "rlang", "RMariaDB", "RMySQL", "roxygen2", "rpart", "rprojroot", "RSQLite", "sass", "scales", "shiny", "stringi", "stringr", "systemfonts", "textshaping", "tidyr", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml", "zip"), lib = "/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library")
install.packages(c("brew", "brio", "bslib", "cli", "cluster", "commonmark", "curl", "data.table", "DBI", "deldir", "desc", "digest", "dplyr", "evaluate", "expm", "fansi", "FNN", "foreign", "fracdiff", "future", "future.apply", "gbm", "gert", "ggplot2", "glue", "hardhat", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "interp", "knitr", "later", "lifecycle", "listenv", "markdown", "MASS", "Matrix", "mgcv", "mongolite", "nlme", "odbc", "openssl", "pbdZMQ", "pkgbuild", "pkgload", "processx", "ps", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "recipes", "rlang", "RMariaDB", "RMySQL", "roxygen2", "rpart", "rprojroot", "RSQLite", "sass", "scales", "shiny", "stringi", "stringr", "systemfonts", "textshaping", "tidyr", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml", "zip"), lib = "/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library")
install.packages(c("brew", "brio", "bslib", "cli", "cluster", "commonmark", "curl", "data.table", "DBI", "deldir", "desc", "digest", "dplyr", "evaluate", "expm", "fansi", "FNN", "foreign", "fracdiff", "future", "future.apply", "gbm", "gert", "ggplot2", "glue", "hardhat", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "interp", "knitr", "later", "lifecycle", "listenv", "markdown", "MASS", "Matrix", "mgcv", "mongolite", "nlme", "odbc", "openssl", "pbdZMQ", "pkgbuild", "pkgload", "processx", "ps", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "recipes", "rlang", "RMariaDB", "RMySQL", "roxygen2", "rpart", "rprojroot", "RSQLite", "sass", "scales", "shiny", "stringi", "stringr", "systemfonts", "textshaping", "tidyr", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml", "zip"), lib = "/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library")
install.packages(c("brew", "brio", "bslib", "cli", "cluster", "commonmark", "curl", "data.table", "DBI", "deldir", "desc", "digest", "dplyr", "evaluate", "expm", "fansi", "FNN", "foreign", "fracdiff", "future", "future.apply", "gbm", "gert", "ggplot2", "glue", "hardhat", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "interp", "knitr", "later", "lifecycle", "listenv", "markdown", "MASS", "Matrix", "mgcv", "mongolite", "nlme", "odbc", "openssl", "pbdZMQ", "pkgbuild", "pkgload", "processx", "ps", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "recipes", "rlang", "RMariaDB", "RMySQL", "roxygen2", "rpart", "rprojroot", "RSQLite", "sass", "scales", "shiny", "stringi", "stringr", "systemfonts", "textshaping", "tidyr", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml", "zip"), lib="/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library")
#' @name carbonVisR
#' @docType package
#' @title Carbon Visualization Package
#' @description
#'
#' @author Zheng
#' @importFrom utils cat format as.POSIXct
#' @importFrom lubridate minutes days floor_date
#' @importFrom httr GET content
#' @importFrom jsonlite fromJSON
#' @importFrom tidyr unnest spread
#' @importFrom dplyr group_by summarize select rename
#' @importFrom ggplot2 ggplot aes geom_line geom_point
#' @importFrom ggthemes theme_stata
#' @importFrom scales scale_fill_brewer
#' @importFrom utils colSums as.data.frame
#' @importFrom grDevices brewer_pal
#' @importFrom dplyr bind_rows
#'
library(httr)
library(jsonlite)
library(tidyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(scales)
library(lubridate)
#' Get Carbon Intensity Statistics
#'
#' This function retrieves carbon intensity statistics from the Carbon Intensity API
#' for a specified date range. It returns a list containing two elements: 'data' (a
#' data frame) and 'plot' (a ggplot object) for visualizing the intensity trends.
#'
#' @param from Start date in "YYYY-MM-DD" format.
#' @param to   End date in "YYYY-MM-DD" format.
#' @return A list with two elements: 'data' (a data frame) and 'plot' (a ggplot object).
#'
#' @details
#' The function queries the Carbon Intensity API for each day within the specified
#' date range and retrieves maximum, average, and minimum intensity values. The result
#' is a data frame containing date-wise intensity statistics, and a ggplot object for
#' visualizing the intensity trends over time.
#'
#' @examples
#' \dontrun{
#' Get_CarbonStats("2023-01-20", "2023-01-30")
#' }
#'
#' @seealso
#' \import{httr}
#' \import{tidyverse}
#'
#' @export
Get_CarbonStats <- function(from, to) {
stats_url <- 'https://api.carbonintensity.org.uk/intensity/stats'
from <- as.Date(from)
to <- as.Date(to)
result_df <- data.frame(date = character(),
max = character(),
average = character(),
min = character(),
index = character(),
stringsAsFactors = FALSE)
for (day in seq(from, to - 1, by = '1 day')) {
next_day <- day + 1
url <- paste(stats_url, as.Date(day), as.Date(next_day), sep = '/')
response <- GET(url)
parsed_data <- content(response, "parsed")
df <- parsed_data[["data"]][[1]][["intensity"]]
result_row <- c(date = as.character(as.Date(day)),
max = as.character(df$max),
average = as.character(df$average),
min = as.character(df$min),
index = as.character(df$index))
result_df <- bind_rows(result_df, result_row)
}
result_df$date <- as.Date(result_df$date, formate = "%y-%m-%d")
result_df$max <- as.numeric(result_df$max)
result_df$average <- as.numeric(result_df$average)
result_df$min <- as.numeric(result_df$min)
plot <- ggplot(result_df, aes(x = date)) +
geom_ribbon(aes(ymin = min, ymax = max), fill = "skyblue", alpha = 0.5) +
geom_line(aes(y = average), color = "red") +
geom_point(aes(y = average, col = index, group = index)) +
labs(title = "Intensity Range and Average Over Time",
x = "Date",
y = "Intensity")
return(list(data = result_df, plot = plot))
}
library(carbonVisR)
library(carbonVisR)
result=Get_CarbonStats("2023-01-01", "2023-01-30")
resul$plot
result$data
result$plot
?Get_CarbonStats
?carbonVisR
library(carbonVisR)
Get_CarbonStats("2023-12-30", "2023-12-01")
Get_CarbonStats("2023-12-01", "2023-12-30")$plot
install.packages('usethis', 'devtools', 'roxygen2')
devtools::load_all(".")
library(carbonVisR)
?carbonVisR
library(carbonVisR)
?carbonVisR
library(carbonVisR)
?carbonVisR
library(carbonVisR)
?carbonVisR
?carbonVisR
library(carbonVisR)
?carbonVisR
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
install.packages("mockery")
devtools:: check()
devtools:: check()
devtools:: check()
library(carbonVisR)
carbon_generation_visual("2023-6-21","2023-6-30","pie")
library(carbonVisR)
carbon_generation_visual("2023-6-21","2023-6-30","pie")
devtools::document()
carbon_generation_visual("2023-6-21","2023-6-30","pie")
library(devtools)
load_all()
check()
document()
test()
carbon_generation_visual("2023-6-12", "2023-6-21", "line")
line_chart
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
document()
test()
rm(list = ls())
library(devtools)
test()
install_deps()
build()
remove.packages("carbonVisR")
remove.packages("pkgbuild")
install.packages("pkgbuild")
install.packages("pkgbuild")
build()
library(devtools)
build()
library(carbonVisR)
carbon_generation_visual("2023-6-21","2023-6-30","pie")
